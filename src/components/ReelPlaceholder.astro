---
import { frontmatter } from '../settings/Settings.md'
import { imagePath } from '../settings/siteInfo'

const stills = frontmatter.reel.placeholderStills
---
<a class="slideshow" data-slideshow>
  <div class="slide-container">
    {stills.map((still, i) => (
      <img
        src={imagePath + still}
        alt=""
        class="slide-bg"
        width="1796"
        height="1010"
        data-slide-bg-index={i}
      >

      <img
        src={imagePath + still}
        alt=""
        class="slide"
        width="1796"
        height="1010"
        data-slide-index={i}
      >
    ))}
  </div>

  <div class="play-button">
    <img
      src="/img/play.svg"
      alt=""
      class="play-button-icon"
    >
  </div>
</a>

<script>
  const slides = document.querySelectorAll('[data-slide-index]')
  const slideBgs = document.querySelectorAll('[data-slide-bg-index]')

  let i = 0
  const interval = 3000
  const crossfadeDuration = 3000

  const advanceSlideshow = () => {
    const thisSlide = slides[i % slides.length]
    const thisSlideBg = slideBgs[i % slides.length]
    // slideshow.style.setProperty('--bg-img', `url(${thisSlide.src})`)

    // Start in-transition
    thisSlide.style.visibility = 'visible'
    thisSlide.classList.add('intro')

    thisSlideBg.style.visibility = 'visible'
    thisSlideBg.classList.add('intro')
    
    // Begin out-transition
    setTimeout(() => {
      thisSlide.classList.replace('intro', 'outro')
      thisSlideBg.classList.replace('intro', 'outro')
    }, interval)
    
    // Complete out-transition
    setTimeout(() => {
      thisSlide.style.visibility = 'hidden'
      thisSlide.classList.remove('outro')
    
      thisSlideBg.style.visibility = 'hidden'
      thisSlideBg.classList.remove('outro')
    }, interval + crossfadeDuration)
    
    i++
  }

  advanceSlideshow()
  setInterval(() => advanceSlideshow(), interval)
</script>

<style lang="scss">
  // .slideshow-container {
  //   border: 1px solid white;
  //   position: relative;
  // }

  .slideshow {
    position: relative;
    margin: 0;
    width: 100vw;
    min-width: 100%;
    max-width: min(120vh, var(--max-element-width));
    aspect-ratio: 1796 / 1005; /** 
                                * Intentionally shorter than 1010 intrinsic
                                * image height to workaround Safari height miscalculation:
                                */
    align-self: center; 
  }

  // backdrop bleeding left and right
  .slideshow::before {
    content: '';
    position: absolute;
    top: 0;
    left: 50%;
    transform: translateX(-50%);
    width: 100vw;
    background: rgb(255, 255, 255, 0.03);
    // background-image: var(--bg-img);
    // background-size: cover;
    // filter: blur(1em);
    // overflow: hidden;
    // opacity: 0.5;
    height: 100%;
    z-index: 0;
  }

  .slide-container {
    position: relative;
    width: 100%;
    height: 100%;
    overflow: hidden;
    // box-shadow: 0 8px 96px -24px rgba(0, 0, 0, 0.5);
  }

  .slide {
    position: absolute;
    display: block;
    visibility: hidden;
    top: 0;
    left: 0;
    width: 100%;
    height: auto;
    opacity: 0;
    // filter: blur(2em);
    transition: opacity 1.5s;
    z-index: 2;

    &.intro {
      opacity: 1;
      // filter: blur(0);
    }
    
    &.outro {
      // transition: opacity 0s;
      opacity: 1;
      z-index: -1;
      // filter: blur(2em);
    }
  }

  .slide-bg {
    position: fixed;
    visibility: hidden;
    top: -5%;
    left: 50%;
    transform: translateX(-50%);
    width: 100vw;
    // background: rgb(20 20 20);
    // background: var(--test-color);
    // background-image: var(--bg-img);
    // background-size: cover;
    // filter: blur(1em);
    // overflow: hidden;
    // opacity: 0.5;
    height: 100%;


    object-fit: cover;
    z-index: -10;
    filter: blur(8em) saturate(2);
    opacity: 0;
    // overflow: hidden;

    transition: opacity 3s linear;
    // box-shadow: 0 8px 96px 48px rgb(0, 0, 0, 1)

    &.intro {
      opacity: 0.325;
      // z-index: 1;
      // filter: blur(0);
    }

    &.outro {
      // z-index: -1;
      // opacity: 0;
      // filter: blur(2em);
    }
  }

  // .play-button-container {
  //   position: absolute;
  //   width: 100%;
    // max-width: var(--max-content-column-width);
    // padding: 0 var(--margin-body-h);
  //   left: 50%;
  //   transform: translateX(-50%);
  //   z-index: 3;
  // }

  .slideshow:hover {
    cursor: pointer;
  }

  .play-button {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    z-index: 3;
    opacity: 0.75;
    background-color: rgb(0 0 0 / 20%);
    display: flex;
    padding: 0.825em;
    border-radius: 999px;
    // filter: drop-shadow(0 2em 2em rgb(0 0 0 / 50%));
    transition: opacity 0.5s linear, background-color 0.5s linear;
    // mix-blend-mode: exclusion;
    
    .slideshow:hover & {
      // filter: drop-shadow(0 2em 3em rgb(0 0 0 / 75%));
      background-color: rgb(0 0 0 / 40%);
      opacity: 1;
    }
  }

  .play-button-icon {
    transform: translateX(10%);
    width: 1.25em;
    height: 1.25em;
    // opacity: 0.5;
  }

</style>
